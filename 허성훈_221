class Solution {
public:
    int maximalSquare(vector<vector<char>>& matrix) {
        if(matrix.empty()) {
            return 0;
        }
        vector<vector<int>> dp(matrix.size(),vector<int>(matrix[0].size(), 0));
        int len = 0;

        for(int i = 0; i < matrix.size(); i++) {
            for(int j = 0; j < matrix[0].size(); j++) {
                if(matrix[i][j] == '1') {
                    dp[i][j] = 1;
                    len = 1;
                }
            }
        }
        for(int i = matrix.size()-2; i>=0 ; i--) {
            for(int j = matrix[0].size()-2; j>=0; j--) {
                if(matrix[i][j] == '1') {
                    dp[i][j] = min(dp[i+1][j], min(dp[i][j+1], dp[i+1][j+1]))+1;
                    len = max(dp[i][j], len);
                }
            }
        }
        return len*len;
    }
};
