class Solution {
public:
    bool wordBreak(string s, vector<string>& wordDict) {
        if (wordDict.size() == 0) {
            return false;
        }
        int n = s.size();
        int m = wordDict.size();
        vector<bool> dp(n + 1);

        dp[0] = true;
        unordered_set<string> dict;
        for (int i = 0; i < m; i ++) {
            dict.insert(wordDict[i]);
        }

        for (int i = 1; i <= n; i ++){
            for (int j = i - 1; j >= 0; j --){
                if (dp[j] && dict.find(s.substr(j, i - j)) != dict.end()){
                    dp[i] = true;
                    break;
                }
            }
        }
        return dp[n];
    }
};
